
[Experimenter 3] 14:36:40
So now we're going to go into the final piece of the interview.

[Experimenter 3] 14:36:45
This is called the fuzzy cognitive map construction.

[Experimenter 3] 14:36:50
Basically, we're going to cover some open-ended questions

[Experimenter 3] 14:36:54
that are intended to enable us to construct what's called a fuzzy cognitive map or FCM.

[Experimenter 3] 14:36:59
related to cyber attacks and cyber attackers knowledge, beliefs, and decisions.

[Experimenter 3] 14:37:06
this lift.

[Experimenter 3] 14:37:08
No. All right. Wait a minute.

[Experimenter 3] 14:37:10
There are no predefined correct answers as with the last few interviews. This process is

[Experimenter 3] 14:37:16
iterative and open-ended and semi-structured.

[Experimenter 3] 14:37:21
So not a rigid structure, but there's kind of a basic structure that we're going to follow.

[Experimenter 3] 14:37:26
We may also use computer visualization software. As you can see, we are doing that.

[Experimenter 3] 14:37:31
Please respond to these questions given your own experiences and based on

[Experimenter 3] 14:37:36
your best understanding. The goal is not to build a rigorous

[Experimenter 3] 14:37:41
answer to a hard question. It's to kind of understand how you view the way things work. So it's very particular to you.

[Participant 5] 14:37:48
All right.

[Experimenter 3] 14:37:51
So I've done my best to kind of

[Experimenter 3] 14:37:55
do a simple enumeration of the task diagram that you laid out.

[Experimenter 3] 14:38:03
This does not include some of the feedback loops.

[Experimenter 3] 14:38:07
Because…

[Experimenter 3] 14:38:09
This is essentially making causal assertions. So a way to read this, and you can see that they're framed in terms of success.

[Experimenter 3] 14:38:18
A way to read this is

[Experimenter 3] 14:38:19
Successfully enumerating the challenge

[Experimenter 3] 14:38:23
causally enables, meaning that that enables you to successfully set up

[Experimenter 3] 14:38:28
the environment with the target.

[Experimenter 3] 14:38:30
So this positively causally affects the next node.

[Participant 5] 14:38:35
Right.

[Experimenter 3] 14:38:37
And for example, if we had said

[Experimenter 3] 14:38:40
failing to enumerate the challenge here, then we could take this edge, which is directed and make it negative instead.

[Experimenter 3] 14:38:47
So then that would be a negative causal relationship.

[Experimenter 3] 14:38:52
And so this

[Experimenter 3] 14:38:54
There we're back. So this represents your

[Experimenter 3] 14:38:59
understanding of the causal mechanisms underlying this process.

[Experimenter 3] 14:39:05
Does that kind of make some sense? Okay, cool, cool.

[Experimenter 3] 14:39:09
So we have these basic steps here.

[Experimenter 3] 14:39:12
First thing I want to do is go through each of them and identify the factors that enable them.

[Experimenter 3] 14:39:19
So basically taking one step back

[Experimenter 3] 14:39:24
So in order to successfully enumerate the challenge at the beginning of a CTF,

[Experimenter 3] 14:39:30
What are some of the factors that enable you to do that?

[Participant 5] 14:39:35
Do you need access to

[Participant 5] 14:39:39
like the targets, I would say.

[Experimenter 3] 14:39:44
And what does that look like?

[Participant 5] 14:39:51
I guess.

[Participant 5] 14:39:53
you need is some sort of like

[Participant 5] 14:39:57
way to interact in the sense that like

[Participant 5] 14:40:00
I can gain information from. So this is all enumeration it's all about.

[Participant 5] 14:40:05
gaining more knowledge or theorizing about what

[Participant 5] 14:40:08
particular knowledge might be applicable to a target so

[Participant 5] 14:40:16
in a CTF, normally you're like given something. This is just like

[Participant 5] 14:40:21
taking stock of what you were given okay

[Experimenter 3] 14:40:25
What else besides, you know.

[Experimenter 3] 14:40:28
basically having you know the targets successfully, I guess, appear in front of you um

[Experimenter 3] 14:40:33
what else enables you to successfully enumerate the challenge?

[Experimenter 3] 14:40:37
There are other factors here. 

[Participant 5] 14:40:40
Yeah. You need the access to your tool set that I talked about

[Participant 5] 14:40:44
And so, yeah, you're going to enter a process where you utilize those tools

[Participant 5] 14:40:50
on the target.

[Experimenter 3] 14:40:54
Is this necessary to enumerate the challenge or is it

[Experimenter 3] 14:40:58
necessary for the next step or both?

[Participant 5] 14:41:01
There's a lot of it's a lot of

[Participant 5] 14:41:04
you're going to need your tool set to

[Participant 5] 14:41:08
set up the environment, but also you need to

[Participant 5] 14:41:12
there's information to be gained.

[Participant 5] 14:41:14
from just the target itself. 

[Experimenter 3] 14:41:17
Okay. Okay, got it. So answering that basic question of what is it, the tool set helps answer that first question. Okay.

[Experimenter 3] 14:41:27
Are there other factors or things you need to be successful here?

[Participant 5] 14:41:34
I think it's just those two things. 

[Experimenter 3] 14:41:37
Okay. What issues or details might come up and influence basically your

[Experimenter 3] 14:41:44
either your success or the degree of your success for like example

[Experimenter 3] 14:41:48
having or not having access to all the things you need or not having the target in a

[Experimenter 3] 14:41:54
understandable way or having full access to it.

[Experimenter 3] 14:41:56
What are some things that might have uh

[Experimenter 3] 14:42:00
First off, does that happen? And if so, what might cause that to happen? 

[Participant 5] 14:42:10
Yeah, there are situations where you would not have like consistent full access to the target.

[Participant 5] 14:42:13
And in those situations you

[Participant 5] 14:42:14
That's part of your enumeration is understanding that.

[Participant 5] 14:42:19
And also…

[Participant 5] 14:42:21
learning what ways or learning, how much access to the target that you have

[Experimenter 3] 14:42:27
what might that sort of be

[Experimenter 3] 14:42:29
or how might you describe that?

[Experimenter 3] 14:42:35
Like, is that an environmental condition? Is it something to do with the target?

[Participant 5] 14:42:40
It could be inherent to the target itself. So like a characteristic of target, that's what comes to mind.

[Participant 5] 14:42:48
right away like right away

[Participant 5] 14:42:51
Maybe I don't have

[Participant 5] 14:42:53
consistent full access to it.

[Participant 5] 14:42:55
It doesn't respond to like

[Participant 5] 14:43:00
That's getting more into like actually like

[Participant 5] 14:43:03
This is the thing working but

[Participant 5] 14:43:07
I need to basically, I would like full control of the target here

[Participant 5] 14:43:13
to gain as much understanding as I can.

[Participant 5] 14:43:16
There are situations where I don't have full control of the target and I can only learn what it allows me to learn.

[Participant 5] 14:43:24
or i have to be

[Participant 5] 14:43:25
choice when i'm

[Participant 5] 14:43:27
When I'm trying to gain information.

[Experimenter 3] 14:43:30
In cases where that restricted access or control is a target character is maybe a characteristic of the target. So I have that basically negatively

[Experimenter 3] 14:43:39
causally affecting your ability to have access to the target.

[Experimenter 3] 14:43:43
Would you say that that negatively affects your success in enumerating the challenge?

[Experimenter 3] 14:43:48
Or is it just one facet of a certain type of challenge and you're like, okay, I have enumerated it and that is part of it.

[Experimenter 3] 14:43:58
It can also be both.

[Participant 5] 14:44:01
Can you state the two options again? I think they might both be true. 

[Experimenter 3] 14:44:07
Okay, yeah. So basically Does this impede your ability to successfully enumerate the challenge?

[Participant 5] 14:44:13
So I think it's the latter, what you said. So, 

[Experimenter 3] 14:44:16
okay.

[Participant 5] 14:44:19
that understanding. 

[Experimenter 3] 14:44:20
Mm-hmm.

[Participant 5] 14:44:21
is yeah probably inherently part of the challenge.

[Experimenter 3] 14:44:25
Okay.

[Experimenter 3] 14:44:27
It just means that you're going to have some sort of lesser understanding of the target.

[Participant 5] 14:44:31
Yeah.

[Experimenter 3] 14:44:32
Okay.

[Experimenter 3] 14:44:40
All right. So maybe I'll add something here that just indicates that you may have

[Experimenter 3] 14:44:46
have slightly…

[Experimenter 3] 14:44:49
No, I don't think we need to add anything. I think that's okay.

[Experimenter 3] 14:44:54
Maybe we'll just mark this as partly positive.

[Experimenter 3] 14:44:58
It's conditionally positive it's kind of

[Experimenter 3] 14:45:02
Okay. Moving on to step two here, successfully setting up the environment with the target.

[Experimenter 3] 14:45:08
What are some of the factors that enable success at this step, aside from having access to tool set and

[Experimenter 3] 14:45:15
initially enumerating the challenge.

[Participant 5] 14:45:18
I think if you've successfully, yeah, you're talking about like

[Participant 5] 14:45:23
the causation if you successfully enumerate the challenge and you have

[Participant 5] 14:45:27
access to the tools.

[Participant 5] 14:45:30
to then access or to interact with them i would say that

[Participant 5] 14:45:34
there's not really anything else that you would need to successfully

[Participant 5] 14:45:38
set up the environment. 

[Experimenter 3] 14:45:43
Mm-hmm. Got it. Got it. Okay. Are there some steps or issues that might impede the success

[Participant 5] 14:45:52
Yeah, there could be like errors in your environment

[Participant 5] 14:45:59
But I don't know. I think you could maybe overcome those with the right tools.

[Experimenter 3] 14:46:04
Mm-hmm.

[Experimenter 3] 14:46:06
Okay.

[Experimenter 3] 14:46:08
So having access to

[Experimenter 3] 14:46:11
good, the right tool set, not just tool set, but the right 

[Participant 5] 14:46:16
tool set, you know, comes into

[Participant 5] 14:46:19
Number two, basically. 

[Experimenter 3] 14:46:22
Right. Yep. Okay.

[Experimenter 3] 14:46:24
So that having access to the right tool set will

[Experimenter 3] 14:46:27
negatively affect

[Experimenter 3] 14:46:29
the risk of errors arising in your environment.

[Participant 5] 14:46:34
In this case, you can overcome errors in your environment with this yeah

[Experimenter 3] 14:46:39
Ah, so do they prevent errors from arising or do they enable you to overcome them?

[Participant 5] 14:46:44
I would say they enable you to overcome them.

[Experimenter 3] 14:46:48
Okay. Okay. Got it. 

[Participant 5] 14:46:52
I guess that's a bit of perspective, though, I guess. 

[Experimenter 3] 14:47:07
Mm-hmm. Does it maybe do a bit of both?

[Experimenter 3] 14:47:13
the right having access to the right tool set.

[Participant 5] 14:47:18
both help you overcome 

[Experimenter 3] 14:47:21
and prevent errors from arising.

[Participant 5] 14:47:23
Yes. Yeah. 

[Experimenter 3] 14:47:28
Okay, cool. It can be a bit tricky teasing out exactly what you know

[Experimenter 3] 14:47:32
Does it cause this or do they work together or whatever? So just trying to

[Experimenter 3] 14:47:36
try to get a little bit of granularity there. Does this sort of make sense the way it's drawn out right now?

[Participant 5] 14:47:44
Sure.

[Participant 5] 14:47:49
Yeah. Okay. 

[Participant 5] 14:47:51
Had to go through each one. 

[Experimenter 3] 14:47:54
Yeah, yeah, yeah. So it can prevent errors, so negative yeah um but it also enables you to overcome errors when they do arise.

[Participant 5] 14:48:00
Errors arising also will causally lead to overcoming errors.

[Experimenter 3] 14:48:06
Because you don't have to do that unless they arise.

[Experimenter 3] 14:48:10
Yeah. Okay.

[Experimenter 3] 14:48:14
So then I guess we've got the basics here. Are there any other factors related to setting up the environment besides

[Experimenter 3] 14:48:21
Let's maybe step back to the errors arising.

[Experimenter 3] 14:48:24
what issues or details might cause the errors to arise?

[Participant 5] 14:48:27
There's like familiarity with the target, but that's

[Participant 5] 14:48:36
Yeah, I guess like

[Participant 5] 14:48:41
the actual like CTF player.

[Participant 5] 14:48:44
having interacted or applied knowledge will inform and

[Participant 5] 14:48:49
Yeah, prevents these errors from happening because

[Participant 5] 14:48:56
Either they'll set up the environmentally different or use a different tool set

[Experimenter 3] 14:49:02
Yeah, so expertise or familiarity.

[Experimenter 3] 14:49:06
Sure.

[Experimenter 3] 14:49:10
That's very relevant. Totally.

[Experimenter 3] 14:49:15
Okay. Anything else come to mind?

[Participant 5] 14:49:18
No, it's bare bones at that point. 

[Experimenter 3] 14:49:21
Sure, yeah. Back to first principles.

[Experimenter 3] 14:49:24
Okay, so then step three, we are successfully interacting with the target. So you're verifying the knowledge that you gained in enumeration. You're verifying some of the functionalities, I think, at this step.

[Experimenter 3] 14:49:39
uh.

[Experimenter 3] 14:49:40
I think you described it as I expect that when I do A, B happens and I have now verified it.

[Experimenter 3] 14:49:48
What are the pieces, assuming you've set up the environment with the target successfully that enable this to happen?

[Participant 5] 14:49:55
you're going to like, again.

[Participant 5] 14:49:57
utilize some of these tools that you have. So there's tools to set up the target, but also tools to

[Participant 5] 14:50:03
enable you to interact with the target

[Experimenter 3] 14:50:09
Mm-hmm.

[Participant 5] 14:50:17
I think, I don't know if familiarity with those tool sets comes in here, but sometimes you can get stuck because you have the right tool, but you just don't know how

[Participant 5] 14:50:24
to implement it or maybe that tool hasn't been implemented in that way before

[Experimenter 3] 14:50:36
Yep. So there's a factor between these, which is actually using the tool.

[Participant 5] 14:50:41
Sure.

[Experimenter 3] 14:50:42
And having access to it enables that, but also

[Experimenter 3] 14:50:47
experience or

[Experimenter 3] 14:50:49
familiarity.

[Experimenter 3] 14:51:03
Okay. Are there other factors that might enable you to successfully interact with the target?

[Participant 5] 14:51:15
Not successfully, but negatively

[Participant 5] 14:51:18
there could be behaviors based on the target that would

[Participant 5] 14:51:22
Disrupt.

[Participant 5] 14:51:25
your ability to successfully do it or

[Participant 5] 14:51:28
maybe it wouldn't work 100% of the time.

[Participant 5] 14:51:31
But that's like in the target. 

[Experimenter 3] 14:51:38
Mm hmm. So would those, how would you discover those?

[Experimenter 3] 14:51:45
or what might cause those?

[Participant 5] 14:51:48
could be environmental variables or it could just be

[Participant 5] 14:51:53
inherent variables to the target.

[Experimenter 3] 14:51:58
Okay, so it could be inherent in the target but also

[Experimenter 3] 14:52:01
it could be because you didn't because of an environmental mistake

[Experimenter 3] 14:52:06
Okay.

[Experimenter 3] 14:52:08
So successfully overcoming oh

[Experimenter 3] 14:52:10
This isn't quite right.

[Experimenter 3] 14:52:13
successfully setting up your environment reduces this

[Experimenter 3] 14:52:17
Risk.

[Experimenter 3] 14:52:21
errors arise in your environment

[Experimenter 3] 14:52:24
increases this.

[Experimenter 3] 14:52:26
And you said there may also be target specific stuff going on there.

[Participant 5] 14:52:31
Right.

[Participant 5] 14:52:33
Basically, but that's

[Participant 5] 14:52:34
I don't know if that would count as unsuccessful

[Participant 5] 14:52:39
it would say it would be an unsuccessful interaction with the target, but it wouldn't be

[Participant 5] 14:52:44
anything controllable by you. It would be

[Participant 5] 14:52:49
the target.

[Experimenter 3] 14:52:51
what type of thing might that be? Like, is there a specific type of target that could

[Participant 5] 14:52:56
that could do that.

[Participant 5] 14:52:59
Yeah, I'm thinking of like

[Participant 5] 14:53:03
poor implementation on the target or maybe dependencies that are

[Participant 5] 14:53:13
a lot of times like things will rely on things like other outside resources

[Participant 5] 14:53:18
Those outside resources are

[Participant 5] 14:53:20
not readily available or even available at all anymore.

[Experimenter 3] 14:53:26
Mm-hmm.

[Experimenter 3] 14:53:37
Mm-hmm.

[Experimenter 3] 14:53:41
And when you encounter that.

[Experimenter 3] 14:53:43
do you have to take specific mitigations?

[Experimenter 3] 14:53:47
Do you have to change your strategy?

[Participant 5] 14:53:51
You do. You either

[Participant 5] 14:53:54
have to like mock the behavior

[Participant 5] 14:53:58
For the target.

[Participant 5] 14:54:01
or you have to modify the target

[Participant 5] 14:54:05
itself.

[Participant 5] 14:54:08
to fix that behavior.

[Participant 5] 14:54:10
There is like a certain amount of

[Experimenter 3] 14:54:14
By mock, you mean emulate? 

[Participant 5] 14:54:22
Yeah. There is a certain amount of leeway that you have that almost it comes up quite often of

[Participant 5] 14:54:29
keeping the target in a pure state

[Participant 5] 14:54:33
Or at least a state that is

[Participant 5] 14:54:35
representative of its actual state.

[Participant 5] 14:54:38
And a workable state, if that makes sense. 

[Experimenter 3] 14:54:41
Got it. So you could either emulate the target behavior or rewrite parts of the target. You said you might do either one.  

[Participant 5] 14:54:48
Modify.

[Experimenter 3] 14:54:50
Yeah. Modify. That's a better word than to rewrite.

[Participant 5] 14:54:55
Because in some cases, you're not writing. You're actually just deleting and cutting.

[Experimenter 3] 14:55:01
Right, yeah, yeah.

[Experimenter 3] 14:55:05
And those things then enable you

[Experimenter 3] 14:55:08
to in a way successfully interact with the target. Got it.

[Participant 5] 14:55:12
And yeah, so that's kind of a balance between

[Participant 5] 14:55:15
you have to make the judgment call of like, did I change the actual behavior

[Participant 5] 14:55:20
Or could I just…

[Participant 5] 14:55:23
So it looks like we can create a way to successfully interact with the target.

[Experimenter 3] 14:55:27
I see you want to preserve the…

[Experimenter 3] 14:55:30
the essence of the target. Right. I see.

[Experimenter 3] 14:55:47
I think that's going to come up later.

[Experimenter 3] 14:55:51
Okay.

[Experimenter 3] 14:55:52
Are there other factors

[Experimenter 3] 14:55:54
that enable or influence

[Experimenter 3] 14:55:57
Let's say actually looking back here.

[Experimenter 3] 14:56:00
What might be an issue or detail that would or an underlying factor that would cause a target to be poorly implemented?

[Experimenter 3] 14:56:10
And you can speculate. That's fine.

[Participant 5] 14:56:13
Yeah. You can…

[Participant 5] 14:56:15
Normally get it or

[Participant 5] 14:56:17
or discern like discern

[Participant 5] 14:56:22
the quality and intentionality of the development or

[Participant 5] 14:56:26
the robustness of the structure in which the target executes.

[Participant 5] 14:56:35
this kind of

[Participant 5] 14:56:39
This kind of comes up in process analysis, but like code smell is a thing

[Participant 5] 14:56:46
where you get a sense of

[Participant 5] 14:56:49
stability from a target.

[Experimenter 3] 14:56:53
So using the term code smell, is that

[Experimenter 3] 14:56:57
Related to the quality of development, robustness of the structure, or both?

[Participant 5] 14:57:05
Code smell is more of like the ability of

[Participant 5] 14:57:08
the CTF player to discern yet the quality or robustness

[Experimenter 3] 14:57:15
Of the target. Yeah. Okay. So it's basically figuring out this was kind of this is kind of poorly done.

[Experimenter 3] 14:57:21
Okay.

[Experimenter 3] 14:57:33
Okay. What about inaccessible dependencies? That's not necessarily a factor related to

[Experimenter 3] 14:57:38
for development it's just

[Experimenter 3] 14:57:42
Are there particular types of targets that are more likely to have inaccessible dependencies?

[Participant 5] 14:57:51
Yeah, normally, and I, without like saying, I guess I have to like say examples for this, but like

[Participant 5] 14:57:57
binaries that are like

[Participant 5] 14:58:01
older or 

[Participant 5] 14:58:06
Like…

[Participant 5] 14:58:08
less not open source like and then stuff like that.

[Participant 5] 14:58:13
But that's like more of a specific example.

[Experimenter 3] 14:58:17
Yeah, that's totally fine.

[Participant 5] 14:58:20
Yeah, proprietary is a huge factor.

[Participant 5] 14:58:23
Just because of those things are less likely like

[Participant 5] 14:58:27
maintained, so you have access.

[Experimenter 3] 14:58:30
Sure.

[Experimenter 3] 14:58:35
And are there particular types of challenges where you might be more likely to encounter that or environments where you'd be more likely to see it?

[Participant 5] 14:58:48
I don't know if you can really know that without interacting with it.

[Participant 5] 14:58:54
Okay.

[Experimenter 3] 14:58:58
stepping over to step four here.

[Experimenter 3] 14:59:01
the long process of

[Experimenter 3] 14:59:03
target process analysis.

[Experimenter 3] 14:59:06
So I think there's a lot going on here.

[Experimenter 3] 14:59:08
You have the static versus dynamic question. You also had

[Experimenter 3] 14:59:13
exploring and verifying the behaviors of functionalities

[Experimenter 3] 14:59:18
What are some of the factors that's

[Experimenter 3] 14:59:22
let's um

[Experimenter 3] 14:59:22
Start with the static dynamic question.

[Experimenter 3] 14:59:25
So.

[Experimenter 3] 14:59:28
is the is the

[Experimenter 3] 14:59:30
informational ask there or is the information you're seeking

[Experimenter 3] 14:59:34
whether something is static or dynamic.

[Participant 5] 14:59:37
Oh, no. I mean…

[Participant 5] 14:59:39
I mean my analysis is static or dynamic. Okay. Okay.

[Experimenter 3] 14:59:46
All right, then…

[Experimenter 3] 14:59:49
Maybe let's start with enumerating the functions or exploring the functions then.

[Experimenter 3] 14:59:56
Functions or functionalities an image of?

[Participant 5] 15:00:00
Functionality, it's probably a better

[Experimenter 3] 15:00:04
And exploring them as part of target process analysis

[Experimenter 3] 15:00:10
Are you not just trying to make them work as with

[Experimenter 3] 15:00:13
step three here, but doing something else, right? 

[Participant 5] 15:00:16
Right. Yeah. You kind of want to see

[Participant 5] 15:00:21
Yeah, whether you're interacting like

[Participant 5] 15:00:24
Yeah, this kind of gets into like dynamic or static analysis but like

[Participant 5] 15:00:30
you're interacting and getting that feedback loop that I talked about.

[Participant 5] 15:00:36
for like alternate paths or different capabilities within

[Participant 5] 15:00:42
piece of a target.

[Experimenter 3] 15:00:45
alternate paths.

[Participant 5] 15:00:47
Yeah, that's more of like talking about the code um

[Participant 5] 15:00:52
But you also can like visualize that.

[Participant 5] 15:00:57
or I visualize that when I might.

[Participant 5] 15:00:59
exploring, you're not actually exploring anything but i

[Participant 5] 15:01:05
Yeah, evaluating different

[Participant 5] 15:01:07
possibilities, I guess.

[Experimenter 3] 15:01:09
Okay, possibilities of…

[Experimenter 3] 15:01:11
abnormal behavior or what's kind of the desired thing that you're looking for with that feedback loop?

[Participant 5] 15:01:17
Yeah, I want to have a full picture of

[Participant 5] 15:01:22
the capabilities of the function.

[Experimenter 3] 15:01:24
Okay.

[Experimenter 3] 15:01:42
full capabilities of functionalities

[Experimenter 3] 15:01:48
Are you especially focused on

[Experimenter 3] 15:01:51
like what they're calling or what the outputs are, or is it anything of interest?

[Participant 5] 15:02:02
I guess both. I want to know…

[Participant 5] 15:02:07
Yes, if I…

[Participant 5] 15:02:10
see the target

[Participant 5] 15:02:12
behaving differently because of my different inputs

[Participant 5] 15:02:17
And also.

[Participant 5] 15:02:20
the output

[Participant 5] 15:02:23
the feedback.

[Participant 5] 15:02:24
Well, it's not going to get different output unless it went a different

[Participant 5] 15:02:28
No, that might be like short, you know, error or fail or, you know, pass fail, or it could have been a completely different like sub process got started up.

[Experimenter 3] 15:02:36
And does that, when you discover that kind of thing, it leads to more exploration?

[Experimenter 3] 15:02:40
Okay, so this is part of the feedback loop.

[Experimenter 3] 15:02:44
like you discover an input that changes the target behavior

[Experimenter 3] 15:02:47
And that leads to exploring. Okay.

[Experimenter 3] 15:02:51
Got it. Can you go into static analysis a little bit?

[Participant 5] 15:02:55
Yeah, basically I want to gain as much information about the functionality

[Participant 5] 15:03:01
of the target.

[Participant 5] 15:03:03
at rest, I want to

[Participant 5] 15:03:07
If I can like discern like the actual code that it's it's using

[Participant 5] 15:03:15
in the decompiler.

[Participant 5] 15:03:17
And basically I'm like code reviewing in reverse or, you know, as I'm reversing these things.

[Participant 5] 15:03:24
And that's a lot faster than just like trial and error.

[Participant 5] 15:03:29
So that might also like inform new

[Participant 5] 15:03:34
capabilities or functionalities. 

[Experimenter 3] 15:03:38
So basically this is kind of working through the source code.

[Experimenter 3] 15:03:42
Okay.

[Experimenter 3] 15:03:45
and you're using specified, sorry, specialized tools for this.

[Experimenter 3] 15:03:50
Like a decompiler, for example.

[Experimenter 3] 15:03:53
Okay.

[Experimenter 3] 15:04:02
ability to because we need to frame these as success or failure, ability to review source code to start there.

[Experimenter 3] 15:04:11
would you do you basically would say you need to have a tool, a decompiler in order to

[Experimenter 3] 15:04:19
Not to review source code or would it be necessary to do that?

[Participant 5] 15:04:24
I don't need source code if I have a compiled binary. 

[Experimenter 3] 15:04: 27
But you need it to understand the functionalities.

[Participant 5] 15:04:30
statically, yes, I can dynamically sometimes discern it as well but that

[Participant 5] 15:04:36
comes from trial and error versus

[Experimenter 3] 15:04:44
have access to.

[Experimenter 3] 15:04:47
the right tools.

[Experimenter 3] 15:04:50
Let's see all right tools for this. And then in this one we have

[Experimenter 3] 15:04:54
have access to right toolset to interact with Target, have access to right tool set to interrogate, or what would you say decompile? 

[Participant 5] 15:05:00
Interrogate is something.

[Participant 5] 15:05:03
I would include.

[Participant 5] 15:05:04
decompiling under interrogating.

[Participant 5] 15:05:10
There's also tools for dynamic analysis interrogating via dynamic analysis, like a fuzzer. 

[Experimenter 3] 15:05:22
Good point, good point. And this is probably a subset of exploring the full capabilities of functionalities.

[Experimenter 3] 15:05:29
And then another is dynamic.

[Experimenter 3] 15:05:37
To summarize that, you'd be understanding functionalities

[Experimenter 3] 15:05:44
like…

[Experimenter 3] 15:05:45
what would be a better way to say it rather than I'm thinking in motion?

[Experimenter 3] 15:05:52
You could just say that.

[Experimenter 3] 15:05:55
But how would you phrase that

[Experimenter 3] 15:05:58
the dynamic analysis.

[Participant 5] 15:06:01
Yeah, I kind of used at rest for static so

[Participant 5] 15:06:10
at execution or in motion.

[Experimenter 3] 15:06:12
at execution sounds great okay

[Experimenter 3] 15:06:15
And that's another thing that enables or

[Experimenter 3] 15:06:18
you know the ability here.

[Experimenter 3] 15:06:22
While examining and developing an understanding of these functionalities at rest and at execution, is that when you would discover inputs? 

[Participant 5] 15:06:28
Yeah, I was about to say both of those inform, yeah. 

[Experimenter 3] 15:06:31
Got it.

[Participant 5] 15:06:33
And like I said, sometimes statically, I'm doing that i'm

[Participant 5] 15:06:38
reading and learning that myself dynamically

[Participant 5] 15:06:41
I'm either like guessing and checking or I'm using a tool that will provide inputs

[Participant 5] 15:06:46
I still have to like go through and inspect and review those. 

[Experimenter 3] 15:06:50
So dynamically you're doing some guess and check

[Experimenter 3] 15:06:53
And then also you're using specific tool set.

[Experimenter 3] 15:06:56
As well.

[Experimenter 3] 15:06:58
what tools might you use here?

[Participant 5] 15:07:01
Yeah, a fuzzer is a great tool just because it will quickly generate

[Participant 5] 15:07:07
inputs.

[Participant 5] 15:07:10
And then…

[Participant 5] 15:07:12
There's also like uh tools like

[Participant 5] 15:07:14
strace that give you an insight into like the internal processes

[Experimenter 3] 15:07:19
Mm-hmm.

[Participant 5] 15:07:22
So you can see like if it's interacting with a kernel.

[Experimenter 3] 15:07:31
See, I'm breaking that apart into

[Experimenter 3] 15:07:35
Two different.

[Experimenter 3] 15:07:35
forms of having the right tool.

[Experimenter 3] 15:07:41
Okay, there we go.

[Experimenter 3] 15:07:55
Okay.

[Experimenter 3] 15:07:58
fuzzer or strace or others

[Experimenter 3] 15:08:08
What might…

[Experimenter 3] 15:08:10
improve or worsen your luck with guess and check.

[Participant 5] 15:08:16
familiarity with

[Participant 5] 15:08:19
the different like

[Participant 5] 15:08:20
protocols that we're dealing with. So if we're talking about like a

[Participant 5] 15:08:26
something that uses network connections

[Participant 5] 15:08:31
or like specific kind of like

[Participant 5] 15:08:34
file formats and stuff like that.

[Participant 5] 15:08:38
just like general expertise will will

[Participant 5] 15:08:43
This is still like all reversing almost because uh

[Participant 5] 15:08:46
you're kind of guessing what the intended

[Participant 5] 15:08:50
behavior of the target would be. That should follow some sort of

[Participant 5] 15:08:55
convention or standard

[Participant 5] 15:08:58
So knowing those beforehand can inform your guess and check.

[Experimenter 3] 15:09:03
Yeah, including so protocol familiarity, including conventions and standards okay

[Experimenter 3] 15:09:12
Makes perfect sense.

[Experimenter 3] 15:09:15
Okay.

[Experimenter 3] 15:09:17
Are there other factors that

[Experimenter 3] 15:09:21
maybe enable or hinder your ability to discover inputs that change the target behavior or to understand functionalities at rest or at execution.

[Experimenter 3] 15:09:33
underlying factors that change those odds of any of those things.

[Participant 5] 15:09:41
Not at this point, yeah. If we've successfully

[Participant 5] 15:09:45
like set up the target and interacted with it.

[Participant 5] 15:09:48
Then at this point, yeah.

[Experimenter 3] 15:09:50
Okay, so…

[Experimenter 3] 15:09:53
If the target, if we go back up here, if we observe disruptive target behaviors.

[Experimenter 3] 15:10:00
what does that affect down here?

[Participant 5] 15:10:03
You might.

[Participant 5] 15:10:05
not have the ability to yet

[Participant 5] 15:10:07
dynamically analyze or analyze it.

[Participant 5] 15:10:11
And…

[Participant 5] 15:10:12
Also, you might not be able to discover valid inputs

[Participant 5] 15:10:19
Based on the target's behavior. 

[Experimenter 3] 15:10:25
Got it. And if you have emulated or modified the target, then

[Experimenter 3] 15:10:30
This may be successful. It is successful with your modified. 

[Participant 5] 15:10:38
And I talked about keeping trying to modify it to keep it as pure as possible because yes it

[Participant 5] 15:10:43
you can if you emulate enough, you can probably find a vulnerability, but it might not actually exist.

[Experimenter 3] 15:10:50
Sure. Okay.

[Experimenter 3] 15:10:52
I think we'll probably, again, we'll probably touch back on that. So bring that back up again in a moment.

[Experimenter 3] 15:10:59
So let's say we've gotten to step five. We have successfully completed the target process analysis.

[Experimenter 3] 15:11:04
And now you are seeking to successfully identify vulnerabilities and weaknesses and also rank them.

[Experimenter 3] 15:11:13
what enables your success at this step?

[Participant 5] 15:11:19
At this step, it's

[Participant 5] 15:11:20
it's a lot of, I think I said like

[Participant 5] 15:11:23
the researcher's ability or the CTF player's ability um

[Participant 5] 15:11:31
Because you're discerning

[Participant 5] 15:11:33
you're taking the process analysis.

[Participant 5] 15:11:37
And…

[Participant 5] 15:11:39
matching basically vulnerable patterns or

[Participant 5] 15:11:46
Yeah, vulnerable behaviors.

[Experimenter 3] 15:11:48
matching vulnerable patterns. Can you go into that a little bit?

[Participant 5] 15:11:51
Yeah, there becomes like a

[Participant 5] 15:11:55
defined like the bugs or solve the CTF, you have to know the vulnerability

[Participant 5] 15:12:02
So I'm unfamiliar with

[Participant 5] 15:12:05
of our wall like memory mismanagement patterns or

[Participant 5] 15:12:12
unsafe code practices.

[Participant 5] 15:12:15
that they'll have a harder time identifying the weaknesses.

[Experimenter 3] 15:12:19
Got it. 

[Participant 5] 15:12:20
Or it might not even be possible.

[Participant 5] 15:12:22
Until you learn about those things. 

[Experimenter 3] 15:12:27
Got it.

[Experimenter 3] 15:12:29
matches known vulnerability patterns.

[Participant 5] 15:12:32
Right.

[Experimenter 3] 15:12:36
And prior knowledge is the key thing here as well.

[Experimenter 3] 15:12:42
Are there other factors aside from just the behavior the you know

[Experimenter 3] 15:12:46
process behavior matching to patterns that you would recognize. Are there other factors that

[Experimenter 3] 15:12:52
enable your success in identifying and in ranking effectively.

[Experimenter 3] 15:12:57
the vulnerabilities, weaknesses

[Participant 5] 15:13:13
Again, this is where like the complexity of the code becomes apparent.

[Participant 5] 15:13:18
sometimes the complexity of the code can't make it harder for you to identify the weakness.

[Participant 5] 15:13:26
But I don't know if that's

[Participant 5] 15:13:30
doesn't stop you from identifying. It just makes it longer.

[Experimenter 3] 15:13:35
I'm trying to think if we had this

[Experimenter 3] 15:13:37
complexity up here.

[Experimenter 3] 15:13:39
I'm not sure that we did.

[Experimenter 3] 15:13:42
robustness of structure

[Experimenter 3] 15:13:44
quality of development.

[Experimenter 3] 15:13:45
So there's implementation.

[Experimenter 3] 15:13:49
But I don't think we have code complexity.

[Experimenter 3] 15:13:54
Okay. And that's a new one.

[Experimenter 3] 15:13:58
code complexity

[Experimenter 3] 15:14:02
Does that just mean, what does it mean?

[Participant 5] 15:14:05
Boy.

[Participant 5] 15:14:06
sometimes it could be like the abstraction that actually like exists inside of the target.

[Participant 5] 15:14:11
So if they use like

[Participant 5] 15:14:14
If they use like multiple design patterns

[Participant 5] 15:14:19
the ability to

[Participant 5] 15:14:22
Identify.

[Participant 5] 15:14:24
Yeah, identify unsafe behavior in that.

[Participant 5] 15:14:27
it's going to be a lot harder to do.

[Experimenter 3] 15:14:31
Why is it harder?

[Participant 5] 15:14:38
in this process, yeah.

[Participant 5] 15:14:40
Besides just like because you can identify the behavior, because the behavior is

[Participant 5] 15:14:47
I just like…

[Participant 5] 15:14:49
it can be like spread out, I guess.

[Participant 5] 15:14:53
Or…

[Participant 5] 15:14:55
harder yeah i guess just like harder to discern from it

[Experimenter 3] 15:15:05
Would you say these are issues here or are they about target process analysis?

[Experimenter 3] 15:15:11
Or both?

[Experimenter 3] 15:15:15
if it's complex code, is that what step does that kind of impede

[Participant 5] 15:15:18
Yeah, I guess that would be more of like the

[Participant 5] 15:15:22
static process analysis.

[Participant 5] 15:15:25
But…

[Participant 5] 15:15:27
It's…

[Participant 5] 15:15:30
it would make it harder to have like a harder

[Participant 5] 15:15:33
full picture of the process. 

[Experimenter 3] 15:15:35
Mm-hmm.

[Participant 5] 15:15:36
statically in step four.

[Participant 5] 15:15:38
but you could

[Participant 5] 15:15:40
gain a decent understanding of the process.

[Participant 5] 15:15:43
And then the vulnerable, the weaknesses

[Participant 5] 15:15:46
still be hard to find because of that.

[Participant 5] 15:15:47
I don't know, maybe it is just a step forward thing.

[Experimenter 3] 15:15:53
I'm going to move, switch the order of static and dynamic.

[Experimenter 3] 15:15:58
So that we uh

[Experimenter 3] 15:16:00
connect these things where they're near one another.

[Experimenter 3] 15:16:04
Just for tidiness of the graph.

[Experimenter 3] 15:16:20
Okay. So…

[Experimenter 3] 15:16:22
If the code is highly complex, then

[Experimenter 3] 15:16:26
the behavior can be hard to discern which

[Experimenter 3] 15:16:29
directly affects understanding functionalities at rest.

[Experimenter 3] 15:16:32
Okay.

[Experimenter 3] 15:16:35
Are there other factors that might

[Experimenter 3] 15:16:37
make it more likely for a code base to be really complex.

[Participant 5] 15:16:49
I think kind of that gets back into well

[Participant 5] 15:16:56
I don't know if the factors have any meaning. It could be like how the

[Participant 5] 15:17:02
Target was like implemented or developed.

[Experimenter 3] 15:17:05
Mm-hmm.

[Participant 5] 15:17:08
Or…

[Participant 5] 15:17:10
like the environment that's the target

[Participant 5] 15:17:13
exist then, but…

[Participant 5] 15:17:15
I don't. 

[Experimenter 3] 15:17:17
Okay. So it just kind of is.

[Experimenter 3] 15:17:21
Okay.

[Experimenter 3] 15:17:24
Are there any other factors at step five here related to ranking the vulnerabilities and weaknesses?

[Experimenter 3] 15:17:31
We've gone into, I think, identification from behavior matching. What about ranking?

[Participant 5] 15:17:39
that becomes that's

[Participant 5] 15:17:40
again kind of on like familiarity and expertise

[Participant 5] 15:17:45
Because you kind of already

[Participant 5] 15:17:47
as you discover potential vulnerabilities you are

[Participant 5] 15:17:55
basically also

[Participant 5] 15:17:58
theorizing on their possibility of existing or ability to be exploited.

[Experimenter 3] 15:18:04
Yeah, so when you rank them, you rank them by what?

[Participant 5] 15:18:08
In a CTF, I'm trying to

[Participant 5] 15:18:13
the potential to get me to a flag, which is obvious, I guess, but

[Participant 5] 15:18:18
the likelihood

[Participant 5] 15:18:20
that it was that it is the fault in the fault

[Participant 5] 15:18:23
the game, the challenge.

[Experimenter 3] 15:18:28
So likelihood of being

[Experimenter 3] 15:18:32
the challenge faults, right? 

[Participant 5] 15:18:40
Like the critical fault. It can come up in unique and fun ways. There are CTFs out there with multiple solutions

[Participant 5] 15:18:47
Or sometimes unintended solutions.

[Participant 5] 15:18:50
So…

[Participant 5] 15:18:52
Yeah, this ranking is…

[Experimenter 3] 15:18:56
Got it. 

[Participant 5] 15:18:59
As long as you're like understanding.

[Experimenter 3] 15:19:00
Out of curiosity.

[Experimenter 3] 15:19:02
when you get to this ranking step.

[Experimenter 3] 15:19:05
Does enumerating the challenge way back at the beginning inform it?

[Experimenter 3] 15:19:09
For example, the nature or presentation of the challenge?

[Participant 5] 15:19:13
Yeah.

[Participant 5] 15:19:15
And that's how a lot of people will

[Participant 5] 15:19:19
I think I mentioned earlier, just jump down to like

[Participant 5] 15:19:23
four or five, you know, six.

[Participant 5] 15:19:27
Because they enumerated, saw that something was like a potential avenue or way to access it. And that immediately put a weakness in their mind or

[Participant 5] 15:19:39
And sometimes that's right. And so, yeah, absolutely.

[Participant 5] 15:19:45
you could even

[Participant 5] 15:19:48
learn in the enumeration that

[Participant 5] 15:19:52
Yeah, like a target binary

[Participant 5] 15:19:55
utilizes an old version of some library that you know is faulty.

[Participant 5] 15:20:00
or implements memory management in a specific way that you know is susceptible to a certain behavior pattern.

[Participant 5] 15:20:07
That would be vulnerable.

[Participant 5] 15:20:08
So yeah, I would say.

[Experimenter 3] 15:20:11
Got it. So this actually way at the beginning here.

[Experimenter 3] 15:20:15
gives you a certain idea of like

[Experimenter 3] 15:20:19
identify potential

[Experimenter 3] 15:20:21
you know vulnerabilities

[Experimenter 3] 15:20:25
and solutions to CTF.

[Experimenter 3] 15:20:27
right from the start.

[Experimenter 3] 15:20:29
kind of a first impressions thing.

[Experimenter 3] 15:20:33
Does that often happen?

[Participant 5] 15:20:36
Yeah, like I

[Participant 5] 15:20:36
I talked about like the Jeopardy board before uh almost

[Participant 5] 15:20:43
normally on these Jeopardy challenges like the first

[Participant 5] 15:20:48
100 and 200 level challenges will be you could

[Participant 5] 15:20:51
open them up immediately and have a good guess of what the

[Experimenter 3] 15:20:56
And so from there, do you even try to do target process analysis or do you go straight to five?

[Participant 5] 15:21:02
You can absolutely just like

[Participant 5] 15:21:05
craft what you think.

[Participant 5] 15:21:09
Is the solution.

[Participant 5] 15:21:12
But I think that can lead to some common pitfalls where

[Participant 5] 15:21:17
And those, you can almost like

[Participant 5] 15:21:19
you still have to do two.

[Participant 5] 15:21:23
you might do

[Participant 5] 15:21:25
for your three to like test, like, is it working? You might just go straight to your

[Participant 5] 15:21:30
five, we, I think.

[Participant 5] 15:21:33
If the functionality exists as I think it will, I can test my

[Participant 5] 15:21:37
my solution right away. 

[Experimenter 3] 15:21:41
Mm-hmm. So to do that.

[Experimenter 3] 15:21:45
Does that require you to make a certain

[Participant 5] 15:21:48
assumptions yeah if you

[Participant 5] 15:21:54
Yeah, assertions on beyond like

[Participant 5] 15:22:07
Yeah, you're basically asserting all the process analysis in that situation.

[Participant 5] 15:22:11
A lot of times CTFs, especially like

[Participant 5] 15:22:16
the like big ones online that are focused on learning

[Participant 5] 15:22:20
are like, they'll even include like funny names but people generally like

[Participant 5] 15:22:24
name them like puns based off what makes them vulnerable or

[Experimenter 3] 15:22:28
Are you more likely to do this if it's a lower point value?

[Participant 5] 15:22:31
Yeah.

[Experimenter 3] 15:22:32
Okay.

[Participant 5] 15:22:35
I also think it's a behavior of the

[Participant 5] 15:22:41
Inexperienced.

[Participant 5] 15:22:42
This will get you the solution sometimes.

[Participant 5] 15:22:46
But it can also

[Participant 5] 15:22:49
waste time.

[Participant 5] 15:22:51
Where if you had gone two three four

[Participant 5] 15:22:54
you would have.

[Participant 5] 15:22:56
learned better

[Experimenter 3] 15:22:59
Yeah.

[Experimenter 3] 15:23:02
So, uh.

[Experimenter 3] 15:23:03
I guess we'll get right to six here. Successfully testing weaknesses yielding abnormal results.

[Experimenter 3] 15:23:09
say, what factors lead to success there aside from having your ranked list of vulnerabilities?

[Experimenter 3] 15:23:18
Are there any other things that influence your ability to succeed at that step?

[Participant 5] 15:23:26
Depending on the like intricacy or, you know, how complex the vulnerability is

[Participant 5] 15:23:33
your understanding of the actual functionality can come into factor. But like we were just talking about in the case where you just jump straight to like

[Participant 5] 15:23:42
testing it.

[Participant 5] 15:23:46
you wouldn't have that.

[Experimenter 3] 15:23:49
Okay, so target process analysis comes into play here.

[Experimenter 3] 15:24:09
And…

[Experimenter 3] 15:24:11
That's important for this step.

[Experimenter 3] 15:24:14
But…

[Experimenter 3] 15:24:17
it's possible that deciding to test your initial hypotheses quickly

[Participant 5] 15:24:23
And to be like successful, yeah.

[Experimenter 3] 15:24:30
but that's

[Experimenter 3] 15:24:31
means that you do not necessarily have an accurate understanding of functionalities. Would that be accurate?

[Participant 5] 15:24:36
Okay.

[Participant 5] 15:24:45
And so I'm sure that some CTF games.

[Participant 5] 15:24:48
will penalize you for this kind of behavior

[Experimenter 3] 15:24:52
How do they do that?

[Participant 5] 15:24:54
by docking the points that you would gain.

[Participant 5] 15:24:57
for the correct solve.

[Participant 5] 15:25:00
for each attempt that you make.

[Participant 5] 15:25:03
Well…

[Participant 5] 15:25:04
Yeah. And so there could be like wrong answers besides just like uh

[Participant 5] 15:25:11
it's not always, you know, ask you techs

[Participant 5] 15:25:13
Here's your flag kind of situation. It could be like

[Participant 5] 15:25:16
put in the value that this thing outputs or something like that

[Participant 5] 15:25:21
At least I've seen it.

[Experimenter 3] 15:25:26
Is that a fair description? Okay.

[Experimenter 3] 15:25:29
And that would probably decrease your chance of deciding to make the assumptions and

[Experimenter 3] 15:25:34
quickly go through that. Okay.

[Experimenter 3] 15:25:41
All right, so up to the top, I'm going to quickly run through and ask

[Experimenter 3] 15:25:46
For each of these factors.

[Experimenter 3] 15:25:49
that inform the steps like enumerating the challenge, setting up your environment. And, you know, that's like having access to the tool set.

[Experimenter 3] 15:25:56
you know, errors arising.

[Experimenter 3] 15:25:58
Are there surprises that can emerge that can lead to these things taking place? What are some surprises that you

[Experimenter 3] 15:26:06
that you've encountered or that could that could happen.

[Experimenter 3] 15:26:09
that might lead to

[Experimenter 3] 15:26:12
an error arising that was unexpected.

[Experimenter 3] 15:26:17
Or, um.

[Experimenter 3] 15:26:19
that might affect your successful implementation of some tool on a particular

[Experimenter 3] 15:26:25
piece of the target. 

[Participant 5] 15:26:29
Yeah, I guess like target obscurity uh could come into a factor.

[Participant 5] 15:26:32
If it's on an architecture I'm not used to

[Participant 5] 15:26:37
or utilizing the protocol I'm not familiar with.

[Participant 5] 15:26:42
that kind of leads into the familiarity that we talked about earlier. 

[Experimenter 3] 15:26:50
Right here, yep target obscurity was going to decrease the chance of that.

[Experimenter 3] 15:26:54
increase the surprise unexpected issue

[Experimenter 3] 15:27:01
Right.

[Experimenter 3] 15:27:10
Okay. When successfully interacting with the target.

[Experimenter 3] 15:27:17
are there

[Experimenter 3] 15:27:18
surprises that could lead to, for example, disruptive target behaviors that you

[Experimenter 3] 15:27:22
even if you feel like you understand the implementation and dependencies, there could be some sort of surprise there.

[Experimenter 3] 15:27:30
Or something that just

[Experimenter 3] 15:27:32
results in you wasting a lot of time.

[Participant 5] 15:27:34
Yeah, there are definitely like rabbit holes and stuff like that.

[Participant 5] 15:27:37
of like unintended or unexpected behavior

[Participant 5] 15:27:42
Once you start interacting

[Experimenter 3] 15:27:44
by trying to understand some disruptive behavior?

[Participant 5] 15:27:47
Or even normal behavior.

[Experimenter 3] 15:27:50
Okay.

[Participant 5] 15:27:53
But I guess that

[Participant 5] 15:27:54
if it's normal behavior for the target, then it's not

[Participant 5] 15:27:58
unsuccessfully interacting with it.

[Experimenter 3] 15:28:02
Mm-hmm.

[Experimenter 3] 15:28:03
Sure. But when would that kind of thing emerge?

[Experimenter 3] 15:28:12
When would you find some

[Experimenter 3] 15:28:14
What would lead you to go down a rabbit hole?

[Participant 5] 15:28:19
I guess complexity adds to that. If there's more like attack surface

[Participant 5] 15:28:23
then there's more chance for me to

[Participant 5] 15:28:26
to pursue the wrong understanding of, you know, they're talking about different pieces of the target working

[Participant 5] 15:28:35
I could spend a lot of time understanding how a different part of the target works and that target.

[Participant 5] 15:28:41
or that part not be where the vulnerability is.

[Experimenter 3] 15:28:46
So that's when examining the attack surfaces.

[Experimenter 3] 15:28:53
And the code being highly complex is going to increase the chance of that

[Experimenter 3] 15:28:57
being a thing, I'm sure. Okay.

[Experimenter 3] 15:29:01
Are there other things, particular types of of uh

[Experimenter 3] 15:29:07
And I will say that this negatively influences successfully interacting with the target because

[Experimenter 3] 15:29:13
slows you down and impedes that progress.

[Experimenter 3] 15:29:17
Are there other things that other things that

[Experimenter 3] 15:29:19
can can lead to this aside from code complexity.

[Experimenter 3] 15:29:24
Are there design facets or

[Experimenter 3] 15:29:27
types of targets or types of approaches you take that

[Experimenter 3] 15:29:31
incidentally lead you to rabbit holes.

[Participant 5] 15:29:38
the

[Participant 5] 15:29:39
quick solutions could add to that like if i'm

[Experimenter 3] 15:29:42
Yeah. So if you decide to make assumptions and test them quickly yeah

[Participant 5] 15:29:49
then I have to almost like

[Participant 5] 15:29:52
jump back to four for that. And if that assumption was wrong, then maybe I

[Participant 5] 15:29:58
yeah this the actual functionality that I should have been focusing on.

[Experimenter 3] 15:30:03
I see.

[Experimenter 3] 15:30:06
Okay.

[Experimenter 3] 15:30:09
So…

[Experimenter 3] 15:30:12
this a little bit.

[Experimenter 3] 15:30:17
So this can lead to an inaccurate understanding of functionalities, which can lead to

[Experimenter 3] 15:30:21
going down rabbit holes.

[Experimenter 3] 15:30:29
Nope, sorry, negative.

[Experimenter 3] 15:30:33
So basically an accurate understanding

[Experimenter 3] 15:30:35
reduces rabbit holes.

[Experimenter 3] 15:30:38
And an inaccurate by making assumptions.

[Experimenter 3] 15:30:42
will lead to more rabbit holes.

[Experimenter 3] 15:30:48
Fortunately, this is all a matrix on the back end, so it doesn't actually have to be super visibly visually interpretable.

[Experimenter 3] 15:31:00
So I think that was initially looking at three, at four. So completing that process analysis.

[Experimenter 3] 15:31:07
Are there surprises that can disrupt your progress here?

[Participant 5] 15:31:20
Yeah, there could be like additional functionality that

[Participant 5] 15:31:23
talked about in three like

[Participant 5] 15:31:25
setting it up to work, there could be additional functionality discovered

[Participant 5] 15:31:30
Inside of the dynamic or even static.

[Participant 5] 15:31:33
either one of them inside of those analysis, you could discover a new piece of the target.

[Participant 5] 15:31:42
And that would be…

[Experimenter 3] 15:31:45
Got it.

[Experimenter 3] 15:31:51
And that…

[Experimenter 3] 15:31:54
That's a good thing to discover, right?

[Experimenter 3] 15:31:57
Or not really.

[Participant 5] 15:32:00
It could be. 

[Experimenter 3] 15:32:01
Okay.

[Participant 5] 15:32:02
It depends on, I guess, if your goal is to find the vulnerability and probably increases the likelihood to have a better understanding of everything.

[Participant 5] 15:32:10
But it also could be something that you have to gain understanding of or that you have to, something that you could gain understanding of that doesn't lead to solve

[Experimenter 3] 15:32:18
okay so that could also lead to a rabbit hole 

[Participant 5] 15:32:22
yeah

[Experimenter 3] 15:32:23
Is it the same rabbit hole up here of interacting with the target?

[Experimenter 3] 15:32:27
Or is it a different rabbit hole?

[Participant 5] 15:32:30
Yeah, they're still examining attack surfaces. Okay.

[Experimenter 3] 15:32:41
But it's slowing down your process analysis.

[Experimenter 3] 15:32:45
Is that right? Okay.

[Experimenter 3] 15:32:50
um at

[Experimenter 3] 15:32:52
Five, identifying and ranking vulnerabilities are there

[Experimenter 3] 15:32:57
surprises, disruptions, or also time wasters that emerge then.

[Participant 5] 15:33:12
No, I don't think there's anything that can interfere with you

[Participant 5] 15:33:16
Because this is something you kind of completely control. You're taking knowledge that you

[Participant 5] 15:33:22
a process separating that and then like

[Participant 5] 15:33:24
Like I said, I guess like pattern matching to vulnerable behavior or trying to discern vulnerable behavior from the analysis that you did. Okay.

[Participant 5] 15:33:35
so yeah i think

[Participant 5] 15:33:37
I don't know if that would be a surprise there. 

[Experimenter 3] 15:33:41
Okay, cool. On to six, successfully testing the weaknesses uh

[Experimenter 3] 15:33:45
getting abnormal results. So you have your ranked list of vulnerabilities. You have

[Experimenter 3] 15:33:50
the target process is analyzed

[Experimenter 3] 15:33:54
Are there any surprises when you go to test those weaknesses?

[Experimenter 3] 15:33:58
get results, you know, trying to see if you're starting to get pieces of the flag.

[Participant 5] 15:34:03
Yeah, I mean, there are often is the scenario where you

[Participant 5] 15:34:08
misunderstood something or misunderstood or something

[Participant 5] 15:34:11
there was like a check that you missed.

[Participant 5] 15:34:14
So your potential solution or your weakness that you identified

[Participant 5] 15:34:18
doesn't actually exist or

[Participant 5] 15:34:22
It could exist but not be exploitable.

[Experimenter 3] 15:34:28
So it's not the weakness. Is that what you're kind of? 

[Participant 5] 15:34:36
Yeah.

[Experimenter 3] 15:34:39
And what would you say is pretty informative of it being exploitable?

[Experimenter 3] 15:34:44
Is there something different?

[Participant 5] 15:34:51
Yeah, that feedback loop that we talked about, like you're going to get some

[Participant 5] 15:34:55
Well, you should get some sort of output.

[Experimenter 3] 15:34:57
Okay.

[Experimenter 3] 15:35:01
Got it. Okay.

[Experimenter 3] 15:35:05
Yeah. And that I think goes back to this one right here. Is that right? Accurate understanding of the functionalities.

[Experimenter 3] 15:35:12
Okay.

[Experimenter 3] 15:35:16
And perhaps would you say this node here ranking

[Experimenter 3] 15:35:21
By the likelihood, if you've effectively ranked, then…

[Participant 5] 15:35:24
Yeah.

[Participant 5] 15:35:27
And also, yeah, at this point, you're

[Participant 5] 15:35:30
If you're testing a weakness it's

[Participant 5] 15:35:32
because you believe that

[Participant 5] 15:35:36
almost you've identified the weakness and you know you have an expectation of what the output will be and that's why you're testing it because you believe it will get you the solve.

[Experimenter 3] 15:35:47
Okay. Now, last piece, or just about last piece

[Experimenter 3] 15:35:53
Are there situations in which

[Experimenter 3] 15:35:56
these come back to bite you.

[Experimenter 3] 15:35:58
modifying parts of the target or emulating target behavior.

[Experimenter 3] 15:36:01
when you're getting down to this point. 

[Participant 5] 15:36:03
Yeah, I think I mentioned that when we talked to you. I think that was one of the things that you said we would get back to like

[Participant 5] 15:36:08
yeah, if I…

[Participant 5] 15:36:10
introduced vulnerabilities myself or covered up some sort of check

[Participant 5] 15:36:15
Then…

[Participant 5] 15:36:17
then we won't have the rights or we won't have an actual solve. And so I've run into this situation where

[Participant 5] 15:36:23
Yeah, on my machine, it works. It's the classic kind of phrasing that can absolutely happen with like a

[Participant 5] 15:36:30
with a CTF challenge.

[Experimenter 3] 15:36:32
Okay. And it's missing a check or also

[Experimenter 3] 15:36:36
What were the other things that that could cause down there? 

[Participant 5] 15:36:41
Yeah, like you visibly change the implementation board like

[Participant 5] 15:36:46
you altered the environment in a way that is different than the actual challenge.

[Experimenter 3] 15:36:53
local versus remote, basically. 

[Participant 5] 15:37:09
Yeah. critical is a good qualifier because

[Participant 5] 15:37:12
Yeah, there could be changes that you made that do slightly changes.

[Participant 5] 15:37:17
Like I probably will give for some challenges, I'll create a fake flag and like

[Participant 5] 15:37:22
That's okay but uh

[Participant 5] 15:37:25
Interesting.

[Participant 5] 15:37:28
But it won't alter the behavior so there won't be

[Experimenter 3] 15:37:31
Got it. Okay.

[Experimenter 3] 15:37:36
Stopping here, we went a little bit over, so I apologize for that. But are there any, looking at this, are there any things that you would note or stuff that you feel is kind of missing

[Experimenter 3] 15:37:46
from how you understand the way this stuff works.

[Participant 5] 15:37:53
No, I feel comfortable with the process that we've outlined. And then, yeah, if we

[Participant 5] 15:38:01
got pretty granular with the

[Participant 5] 15:38:05
different effects.

[Experimenter 3] 15:38:06
Great. Okay. All right.

[Experimenter 3] 15:38:09
Well, that concludes our interviews for today. 

